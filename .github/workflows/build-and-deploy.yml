name: Build and Deploy Font Families

on:
  push:
    branches: [ main ]
    paths:
      - 'fonts/**'
      - 'aspekta/**'
      - 'build-tools/**'
      - 'site/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for proper versioning
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run font processing and build
      run: |
        echo "Building font-families..."
        npm run build
    
    - name: Run tests
      run: npm test || echo "Tests not yet implemented"
    
    - name: Run validation
      run: |
        echo "Validating font licensing and integrity..."
        node build-tools/workflows/build.js --validate || echo "Validation warnings acceptable"
    
    - name: Build catalog site
      run: |
        echo "Building catalog site with Eleventy..."
        npm run build-site || echo "Eleventy build not yet implemented"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: font-families-build
        path: |
          dist/
          site/_site/
        retention-days: 30
    
    - name: Check build outputs
      run: |
        echo "Checking required build outputs..."
        ls -la dist/ || echo "dist/ not found"
        ls -la dist/api/ || echo "dist/api/ not found"
        ls -la dist/modules/ || echo "dist/modules/ not found"
        
        if [ -f "dist/api/catalog.json" ]; then
          echo "‚úÖ Public catalog generated"
          wc -l dist/api/catalog.json
        else
          echo "‚ùå Missing dist/api/catalog.json"
        fi
        
        if [ -f "dist/api/complete-catalog.json" ]; then
          echo "‚úÖ Complete catalog generated"
          wc -l dist/api/complete-catalog.json
        else
          echo "‚ùå Missing dist/api/complete-catalog.json"
        fi
        
        if [ -f "dist/modules/index.js" ]; then
          echo "‚úÖ ES modules generated"
        else
          echo "‚ùå Missing dist/modules/index.js"
        fi

  deploy-github-pages:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: font-families-build
    
    - name: Prepare GitHub Pages content
      run: |
        # Create pages directory structure
        mkdir -p _site
        
        # Copy catalog site if it was built
        if [ -d "site/_site" ]; then
          cp -r site/_site/* _site/
        else
          # Fallback: create basic index page
          cat > _site/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Font Families - Open Font Collection</title>
          <style>
            body { 
              font-family: system-ui, -apple-system, sans-serif; 
              max-width: 800px; 
              margin: 0 auto; 
              padding: 2rem; 
              line-height: 1.6; 
            }
            .font-family { 
              border: 1px solid #ddd; 
              padding: 1rem; 
              margin: 1rem 0; 
              border-radius: 8px; 
            }
            .font-name { 
              font-size: 1.5rem; 
              font-weight: bold; 
              margin-bottom: 0.5rem; 
            }
            .font-info { 
              color: #666; 
            }
          </style>
        </head>
        <body>
          <h1>Font Families - Open Font Collection</h1>
          <p>Curated collection of open-licensed fonts for web development.</p>
          
          <div id="fonts">
            <p>Loading font catalog...</p>
          </div>
          
          <script>
            // Load and display font catalog
            fetch('./api/catalog.json')
              .then(response => response.json())
              .then(catalog => {
                const container = document.getElementById('fonts');
                container.innerHTML = '';
                
                Object.entries(catalog.families).forEach(([slug, family]) => {
                  const div = document.createElement('div');
                  div.className = 'font-family';
                  div.innerHTML = `
                    <div class="font-name">${family.name}</div>
                    <div class="font-info">
                      License: ${family.license || 'Unknown'} | 
                      Author: ${family.author || 'Unknown'}
                      ${family.description ? `<br>${family.description}` : ''}
                    </div>
                  `;
                  container.appendChild(div);
                });
              })
              .catch(error => {
                document.getElementById('fonts').innerHTML = `
                  <p>Error loading font catalog: ${error.message}</p>
                `;
              });
          </script>
        </body>
        </html>
        EOF
        fi
        
        # Copy API files for access from website
        if [ -d "dist/api" ]; then
          mkdir -p _site/api
          cp -r dist/api/* _site/api/
        fi
        
        # Copy module files for CDN access via GitHub Pages
        if [ -d "dist/modules" ]; then
          mkdir -p _site/modules
          cp -r dist/modules/* _site/modules/
        fi
    
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: '_site'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v3

  validate-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Validate community contributions
      run: |
        echo "Validating community font contributions..."
        
        # Check if new fonts were added to fonts/open-fonts/
        if git diff --name-only origin/main...HEAD | grep -q "^fonts/open-fonts/"; then
          echo "New open fonts detected - running validation..."
          
          # Run license validation
          npm run build -- --validate-licenses
          
          # Check for required files
          for font_dir in $(git diff --name-only origin/main...HEAD | grep "^fonts/open-fonts/" | cut -d'/' -f1-3 | sort -u); do
            echo "Validating $font_dir..."
            
            if [ ! -f "$font_dir/LICENSE.txt" ] && [ ! -f "$font_dir/OFL.txt" ]; then
              echo "‚ùå Missing license file in $font_dir"
              exit 1
            fi
            
            if [ ! -d "$font_dir/fonts" ]; then
              echo "‚ùå Missing fonts/ directory in $font_dir"
              exit 1
            fi
          done
          
          echo "‚úÖ Community contribution validation passed"
        else
          echo "No new open fonts detected - skipping validation"
        fi
    
    - name: Comment PR status
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const { number } = context.issue;
          
          github.rest.issues.createComment({
            owner,
            repo,
            issue_number: number,
            body: `## Font Families Build Status
            
            ‚úÖ Build completed successfully
            üì¶ Font processing and validation passed
            üöÄ Ready for review and merge
            
            After merge, the updated font catalog will be automatically deployed to GitHub Pages.`
          });

  npm-publish:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: font-families-build
    
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create release summary
      run: |
        echo "## üì¶ Font Families Release ${{ github.event.release.tag_name }}"
        echo ""
        echo "### Changes"
        echo "- Updated font collection and processing"
        echo "- Generated new catalog and ES modules"
        echo "- Published to NPM and jsDelivr CDN"
        echo ""
        echo "### Usage"
        echo '```bash'
        echo "npm install @hund-press/font-families@${{ github.event.release.tag_name }}"
        echo '```'
        echo ""
        echo '```javascript'
        echo "import { aspekta } from 'https://cdn.jsdelivr.net/gh/hund-press/font-families@${{ github.event.release.tag_name }}/dist/modules/aspekta.js'"
        echo '```'